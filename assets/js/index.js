// 1) Розписати покроково, що робить програма:
/*
Кроки:
1) оголосити numbers

2) присвоїти numbers масив з 7 елементів 5, 8, -1, '-6', 11, 'ololo', '-2': numbers = [5, 8, -1, '-6', 11, 'ololo', '-2']

3) оголосити sum

4) присвоїти sum 0: sum = 0

5) оголосити i

6) присвоїти i 0: i = 0

7) перевірити, чи i менше довжини масиву: 0 < 7 - так

8) створюємо умови для перевірки, чи є елемент масиву numbers[i] числом isNaN(numbers[i]

9) присвоїти sum попереднє значення при додавання до 0-й елемент масиву: sum = 0 + 5 = 5

10) збільшити i на одиницю: i = 1

11) перевірити, чи i менше довжини масиву: 1 < 7 - так

12) присвоїти sum попереднє значення при додавання до 1-й елемент масиву: sum = 5 + 8 = 13

13) збільшити i на одиницю: i = 2

14) перевірити, чи i менше довжини масиву: 2 < 7 - так

15) присвоїти sum попереднє значення при додавання до 2-й елемент масиву: sum = 13 + -1 = 12

16) збільшити i на одиницю: i = 3

17) перевірити, чи i менше довжини масиву: 3 < 7 - так

18) конвертуємо і перевіряємо що це число за допомогою parseInt '-6': -6

19) присвоїти sum попереднє значення при додавання до 3-й елемент масиву: mul = 12 + -6 = 6

20) збільшити i на одиницю: i = 4

21) перевірити, чи i менше довжини масиву: 4 < 7 - так

22) присвоїти sum попереднє значення при додавання до 4-й елемент масиву: sum = 6 + 11 = 17

23) збільшити i на одиницю: i = 5

24) перевірити, чи i менше довжини масиву: 5 < 7 - так

25) перевіряємо 'ololo' не є числом і не конвертується в число та пропускаємо

26) присвоїти sum попереднє значення при додавання до 5-й елемент масиву залишається без змін: sum = 17 + 'ololo' = 17

27) збільшити i на одиницю: i = 6

28) перевірити, чи i менше довжини масиву: 6 < 7 - так

29) конвертуємо і перевіряємо що це число за допомогою parseInt '-2': -2

30) присвоїти sum попереднє значення при додавання до 6-й елемент масиву: sum = 17 + -2 = 15

31) перевірити, чи i менше довжини масиву: 7 < 7 - ні

32) вивести повідомлення Sum is 15

щоб добуток правильно рахувався, треба:
 */

// 3) пофіксити баг, не змінюючи сам масив. тобто виправити баг таким чином, щоб сума рахувалася правильно і видавало 15
const numbers = [5, 8, -1, '-6', 11, 'ololo', '-2'];
let sum = 0;

for (let i = 0; i < numbers.length; i++) {
    if (isNaN(numbers[i])) {
        continue;
    }
    sum += parseInt(numbers[i]);
}

alert('Sum is ' + sum);

//   2) на якій ітерації програма перестала коректно рахувати суму чисел (чому дорівнює i)?
//  На ітерації 3,5,6 перестала коректно рахувати суму чисел, бо ми додавали число до рядка.